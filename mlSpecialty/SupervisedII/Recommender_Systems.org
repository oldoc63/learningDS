
* Introduction to Recommender Systems

** What are Recommender Systems?
With the growth of the internet, the number of options people have for everything from watching videos, to buying clothes, to finding a date has increased dramatically. Having potentially thousands of options, how are we to find and choose the best options for us?

Many internet companies have provided us tools to help us navigate these seemingly infinite number of choices. For example, when you visit a product page on an ecommerce site, you may have noticed a section of the page that suggests other products you might like based on things you have purchased in the past. Perhaps you have received a push notification on your mobile phone recommending a video to watch. The closer you look, the more likely you are to find all sorts of recommendations being made in the websites and mobile apps you use.

All these tools are powered by recommender systems. Recommender systems are algorithms that use data about products and user's preferences to make recommendations to users about the best options to choose from a set of options.

We will learn about the properties of recommender systems, the ways they differ from traditional supervised learning, and the different types of recommender systems.

** Recommender Systems versus Supervised Learning
As you learned about recommender systems in the previous exercise, you may be wondering how recommender systems differ from traditional supervised learning techniques you have learned about in previous sections. In general, recommender systems do often utilize machine learning techniques. So what is the difference between the two terms?

The difference is not in the technique, but in purpose. Recommender systems are built to address problems of determining the *best action* for a user to take given a set of options. Supervised learning is generally used to describe machine learning to predict *outcomes*.

Let's take the example of an E-Commerce website selling shoes. If the website built a machine learning model that was designed to determine how much each user would like each shoe, that model would be considered a recommender system. However, if the purpose of the machine learning model is built to determine how many shoes the site would sell next month, that would be considered just an application of supervised learning.

Recommender systems also differ from traditional supervised learning in the specific properties are important for measuring their performance, as we shall see in the following section.

| Recommender Systems  | Machine Learning          |
|----------------------+---------------------------|
| Suggesting shoes     | Shoes that will sell      |
| Apply for a given CC | Transsaction is faudulent |
| Users similar to you | Clustering                |

** Properties of Good Recommender Systems
When considering the performance of a recommender system, there are a couple of different dimensions we should consider:

    - /Relevance:/ When a recommender system makes a recommendation, it should be relevant to the user. More specifically, these recommendations should be ones the user would likey rate highly. For example, a female user who only looks  at and buys women's shoes on an ecommerce website should generally only receive recommendations for women's shoes. For many data practitioners, this is the most obvious and important property to optimize. However, it is critical to understand this is not the only important property of a recommender system.

    - /Novelty:/ Recommender systems should be ideally making recommendations the user has not seen before. For example, a recommender system that consistently recommends only the most popular women's shoes to a female user may be considered a poor recommender system.

    - /Serendipity:/ Good recommender systems generally make recommendations that are somewhat unexpected. These sorts of recommendations (assuming they are relevant) can often delight users. Going back to our shoe ecommerce site example, a user that often purchases running shoes might get recommended sandals that are good for running from a serendipitous recommender system.

    - /Recommendation Diversity:/ Recommender systems that recommend many different types of items are more likely to have at least one item liked by the user. Looking at our store site example, a recommender system that suggest to users not only shoes, but socks and shoe polish may be preferable to one that only recommends shoes.

    - /Technical Complexity:/ Recommender systems may often consist of many complex algorithms and parts. As a result, these systems require maintenance and some level of interpretability by technical staff. Therefore, recommender systems that are less complex and easier to understand are preferable from a cost and risk perspective.

** Types of Recommender Systems
Recommender systems can generally be classified into one of three different groups depending on the algorithmic approach they take to make recommendations:

    - /*Collaborative Filtering:*/ Collaborative filtering is a recommender system technique that makes recommendations for a target user by using ratings information from other users. The driving principle behind collaborative filtering is that users that have similar ratings for items have similar tastes.

    - /*Content-based Filtering:*/ Content-based Filtering is a recommender system technique that uses data about user preferences and attributes of item to model the likelihood a given user will like a specific item. This type of recommender systems tends to look more like the traditional machine learning models used in supervised learning.

    - /*Knoledge-Based:*/ Knowledge-based recommender systems are a class of recommender systems used when there is not a lot of data available. Rules are explicitly programmed based on user preferences and domain knowledge. While an important class of recommender systems, we will not be discussing them in detail in this module.

We're primarily going to focus on collaborative filtering in the course of this module.

[[./Types_of_recommender_systems.png]]
